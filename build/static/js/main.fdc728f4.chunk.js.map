{"version":3,"sources":["App.js","index.js"],"names":["api","App","useState","query","setQuery","resultBox","useSpring","opacity","transform","from","config","duration","easing","easings","headingAnimation","searchBarAnimation","weather","setWeather","className","main","div","style","type","placeholder","onChange","e","target","value","onKeyPress","evt","key","fetch","then","res","json","result","name","sys","country","d","day","getDay","date","getDate","month","getMonth","year","getFullYear","dateBuilder","Date","classname","Math","round","temp","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAMMA,G,MACC,oCADDA,EAEE,0CAsHOC,MAnHf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNC,EADM,KACCC,EADD,KAEPC,EAAYC,YAAU,CAC1BC,QAAS,EACTC,UAAW,4BACXC,KAAM,CAAEF,QAAS,EAAGC,UAAW,8BAC/BE,OAAQ,CAAEC,SAAU,IAAMC,OAAQC,OAE9BC,EAAmBR,YAEvB,CACEC,QAAS,EACTC,UAAW,4BACXC,KAAM,CAAED,UAAW,yBAA0BD,QAAS,GACtDG,OAAQ,CAAEC,SAAU,GAAIC,OAAQC,OAG9BE,EAAqBT,YAAU,CACnCE,UAAW,6BACXC,KAAM,CAAED,UAAW,6BACnBE,OAAQ,CAAEC,SAAU,IAAMC,OAAQC,OApBvB,EAsBiBX,mBAAS,IAtB1B,mBAsBNc,EAtBM,KAsBGC,EAtBH,KAoEb,OACE,qBACEC,UACyB,oBAAhBF,EAAQG,KAAf,cACWH,EAAQA,QAAQ,GAAGG,MAC1B,MAJR,SAOE,sBAAKD,UAAU,cAAf,UAEE,cAAC,IAASE,IAAV,CAAcC,MAAOP,EAAkBI,UAAU,UAAjD,yBAGA,cAAC,IAASE,IAAV,CAAcC,MAAON,EAAoBG,UAAU,aAAnD,SACE,uBACEA,UAAU,aACVI,KAAK,OACLC,YAAY,WACZC,SAAU,SAACC,GAAD,OAAOrB,EAASqB,EAAEC,OAAOC,QACnCA,MAAOxB,EACPyB,WAhEK,SAACC,GACE,UAAZA,EAAIC,KACNC,MAAM,GAAD,OAAI/B,EAAJ,qBAAyBG,EAAzB,+BAAqDH,IACvDgC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLlB,EAAWkB,GACX/B,EAAS,aA6Da,oBAAhBY,EAAQG,KACd,eAAC,IAASC,IAAV,CAAcF,UAAU,aAAaG,MAAOhB,EAA5C,UACE,sBAAKa,UAAU,eAAf,UACE,sBAAKA,UAAU,WAAf,UACGF,EAAQoB,KADX,KACmBpB,EAAQqB,IAAIC,WAE/B,qBAAKpB,UAAU,OAAf,SA9DQ,SAACqB,GACnB,IAwBIC,EAVO,CACT,SACA,SACA,UACA,YACA,WACA,SACA,YAGaD,EAAEE,UACbC,EAAOH,EAAEI,UACTC,EA1BS,CACX,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAciBL,EAAEM,YACjBC,EAAOP,EAAEQ,cAEb,MAAM,GAAN,OAAUP,EAAV,YAAiBE,EAAjB,YAAyBE,EAAzB,YAAkCE,GAgCDE,CAAY,IAAIC,WAEzC,sBAAKC,UAAU,qBAAf,UACE,sBAAKhC,UAAU,eAAf,UACE,sBAAKA,UAAU,OAAf,UAAuBiC,KAAKC,MAAMpC,EAAQG,KAAKkC,MAA/C,WACA,qBAAKnC,UAAU,UAAf,SAA0BF,EAAQA,QAAQ,GAAGG,UAE/C,qBAAKD,UAAU,0BAInB,SClHVoC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.fdc728f4.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { useSpring, animated } from \"react-spring\";\nimport * as easings from \"d3-ease\";\n\nimport \"./App.css\";\n\nconst api = {\n  key: \"f35a29ec809a31c42a5897f7142ebeb0\",\n  base: \"http://api.openweathermap.org/data/2.5/\",\n};\n\nfunction App() {\n  const [query, setQuery] = useState(\"\");\n  const resultBox = useSpring({\n    opacity: 1,\n    transform: \"translate3d(0px,-100px,0)\",\n    from: { opacity: 0, transform: \"translate3d(0px, 200px, 0)\" },\n    config: { duration: 1000, easing: easings.easePolyOut },\n  });\n  const headingAnimation = useSpring(\n    // { config: { duration: 1000 } },\n    {\n      opacity: 0,\n      transform: \"translate3d(0px,-200px,0)\",\n      from: { transform: \"translate3d(0px,0px,0)\", opacity: 1 },\n      config: { duration: 50, easing: easings.easePolyOut },\n    }\n  );\n  const searchBarAnimation = useSpring({\n    transform: \"translate3d(0px, -200px,0)\",\n    from: { transform: \"translate3d(0px, 0px , 0)\" },\n    config: { duration: 1000, easing: easings.easePolyOut },\n  });\n  const [weather, setWeather] = useState({});\n\n  const search = (evt) => {\n    if (evt.key === \"Enter\") {\n      fetch(`${api.base}weather?q=${query}&units=metric&appid=${api.key}`)\n        .then((res) => res.json())\n        .then((result) => {\n          setWeather(result);\n          setQuery(\" \");\n        });\n    }\n  };\n\n  const dateBuilder = (d) => {\n    let months = [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\",\n    ];\n    let days = [\n      \"Sunday\",\n      \"Monday\",\n      \"Tuesday\",\n      \"Wednesday\",\n      \"Thursday\",\n      \"Friday\",\n      \"Saturday\",\n    ];\n\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n\n    return `${day} ${date} ${month} ${year}`;\n  };\n\n  return (\n    <div\n      className={\n        typeof weather.main != \"undefined\"\n          ? `App ${weather.weather[0].main}`\n          : \"App\"\n      }\n    >\n      <div className=\"weather-box\">\n        {/* <div className=\"heading\">WEATHER APP</div> */}\n        <animated.div style={headingAnimation} className=\"heading\">\n          WEATHER APP\n        </animated.div>\n        <animated.div style={searchBarAnimation} className=\"search-box\">\n          <input\n            className=\"search-bar\"\n            type=\"text\"\n            placeholder=\"Location\"\n            onChange={(e) => setQuery(e.target.value)}\n            value={query}\n            onKeyPress={search}\n          />\n        </animated.div>\n        {typeof weather.main != \"undefined\" ? (\n          <animated.div className=\"result-box\" style={resultBox}>\n            <div className=\"location-box\">\n              <div className=\"location\">\n                {weather.name}, {weather.sys.country}\n              </div>\n              <div className=\"date\">{dateBuilder(new Date())}</div>\n            </div>\n            <div classname=\"weather-box-inside\">\n              <div className=\"temp-weather\">\n                <div className=\"temp\">{Math.round(weather.main.temp)}Â°c</div>\n                <div className=\"weather\">{weather.weather[0].main}</div>\n              </div>\n              <div className=\"temp-properties\"></div>\n            </div>\n          </animated.div>\n        ) : (\n          \"\"\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}